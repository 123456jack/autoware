{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"_clo",
				"_cloud_proj"
			],
			[
				"sen",
				"sensor_model"
			],
			[
				"CL",
				"CloudProjection"
			],
			[
				"p",
				"point"
			],
			[
				"num",
				"num_beams"
			],
			[
				"Point",
				"PointXYZIFN"
			],
			[
				"proj",
				"proj_params"
			],
			[
				"Cloud",
				"CloudToDepth"
			],
			[
				"publ",
				"publishImages"
			],
			[
				"_has",
				"_has_noise_image"
			],
			[
				"_ha",
				"_has_intensity_image"
			],
			[
				"_h",
				"_has_intensity_image"
			],
			[
				"depth",
				"depth_image"
			],
			[
				"_cloud",
				"_cloud_topic"
			],
			[
				"Clo",
				"CloudToDepth"
			],
			[
				"cloud",
				"cloud_ptr"
			],
			[
				"dep",
				"depth_image"
			],
			[
				"cl",
				"cloud"
			],
			[
				"sr",
				"string"
			],
			[
				"ar",
				"argc"
			],
			[
				"file",
				"filename"
			],
			[
				"end",
				"endl"
			],
			[
				"from",
				"fromModel"
			],
			[
				"un",
				"uint16_t"
			],
			[
				"an",
				"angle_range"
			],
			[
				"A",
				"AngularRange"
			],
			[
				"it",
				"iterator"
			],
			[
				"re",
				"return"
			],
			[
				"in",
				"inc\t#include <â€¦>"
			],
			[
				"str",
				"string"
			]
		]
	},
	"buffers":
	[
		{
			"file": "launch/cloud2image.launch",
			"settings":
			{
				"buffer_size": 1788,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/angles.h",
			"settings":
			{
				"buffer_size": 8891,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/qt/widgets/opengl_folder_player.cpp",
			"settings":
			{
				"buffer_size": 11102,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/qt/utils/utils.cpp",
			"settings":
			{
				"buffer_size": 2454,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/utils/velodyne_utils.cpp",
			"settings":
			{
				"buffer_size": 3740,
				"line_ending": "Unix"
			}
		},
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 3605,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/cloud2image/cloud_to_image.h",
			"settings":
			{
				"buffer_size": 1750,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/cloud_projection/angles.h",
			"settings":
			{
				"buffer_size": 8891,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/cloud_projection/cloud_projection.cpp",
			"settings":
			{
				"buffer_size": 17835,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/cloud_projection/projection_params.cpp",
			"settings":
			{
				"buffer_size": 4139,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/cloud_projection/sensor_params.cpp",
			"settings":
			{
				"buffer_size": 11060,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/cloud2image/cloud_to_image.cpp",
			"settings":
			{
				"buffer_size": 9779,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/cloud2image/cloud_to_image_node.cpp",
			"settings":
			{
				"buffer_size": 236,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/cloud_projection/cloud_projection.h",
			"settings":
			{
				"buffer_size": 6631,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/cloud_projection/pcl_point_types.h",
			"settings":
			{
				"buffer_size": 1485,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/cloud_projection/projection_params.h",
			"settings":
			{
				"buffer_size": 3634,
				"line_ending": "Unix"
			}
		},
		{
			"file": "include/cloud_projection/sensor_params.h",
			"settings":
			{
				"buffer_size": 8452,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/alexandr/autoware-dev/autoware-feature-road-surface-extraction/ros/src/computing/perception/semantics/packages/lidar_road_surface/nodes/ground_mapper/mapping.cpp",
			"settings":
			{
				"buffer_size": 93182,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/alexandr/autoware-dev/autoware-feature-road-surface-extraction/ros/src/computing/perception/semantics/packages/lidar_road_surface/nodes/ground_mapper/mapping.h",
			"settings":
			{
				"buffer_size": 11525,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/cloud_to_image_node.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/pcl_point_types.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/cloud_to_image.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/cloud_to_image.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/projection_params.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/sensor_params.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/projection_params.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/sensor_params.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/cloud_projection.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/cloud_projection.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/tests/test_angular_range.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/tests/test_sensor_params.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/tests/test_projection_params.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/tests/test_cloud_projection.cpp",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/utils/radians.h",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/utils/cloud.cpp",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/projections/cloud_projection.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/CMakeLists.txt",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/package.xml",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/utils/rich_point.h",
		"/home/alexandr/autoware-dev/autoware-feature-road-surface-extraction/ros/src/computing/perception/semantics/packages/lidar_road_surface/launch/ground_mapping.launch",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/cloud2image.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/cloud_to_depth.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/test_cloud_projection.cpp",
		"/home/alexandr/autoware-dev/autoware-feature-road-surface-extraction/ros/src/computing/perception/semantics/packages/lidar_road_surface/nodes/ground_mapper/mapping.cpp",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/utils/cloud.h",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/qt/utils/utils.h",
		"/home/alexandr/autoware-dev/autoware-feature-road-surface-extraction/ros/src/computing/perception/semantics/packages/lidar_road_surface/nodes/ground_mapper/mapping.h",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/utils/velodyne_utils.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/test_projection_params.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/test_sensor_params.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/spherical_projection.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/ring_projection.cpp",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/spherical_projection.cpp",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/qt/drawables/drawable_cloud.cpp",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/projections/spherical_projection.h",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/projections/spherical_projection.cpp",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/projections/cloud_projection.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch/ros/src/sensing/visualization/packages/lidar_cloud_to_image/src/test_angular_range.cpp",
		"/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/projections/projection_params.h",
		"/home/alexandr/autoware-dev/autoware-develop-branch-industrial-ci-test/ros/src/util/packages/runtime_manager/scripts/runtime_manager_dialog.py"
	],
	"find":
	{
		"height": 76.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"lidar_range_images",
			"make_unique",
			"_correct",
			"lidar_range_image",
			"_row_angles",
			"_col_angles_sines",
			"_cloud_proj",
			"rowFromAngle",
			"new pcl::",
			"Not correcting",
			"timeToStr",
			"saveDepthImage",
			"save",
			"init(",
			"/c2d/",
			"cloud2depth",
			"_cloud_proj",
			"config_filename",
			"CloudToDepth",
			"argc",
			"init(",
			"getParam",
			"handle",
			"init(",
			"DoNotFree",
			"throw",
			"pt_aux",
			"velodyne",
			"::ConstPtr",
			"_ptr",
			"new pcl",
			"Angles",
			"type",
			"valid",
			"validO",
			"valid",
			"invali",
			"_params",
			"ProjectionParams",
			"pcl_out_",
			"pcl_ground_ptr_",
			"pcl_ground_",
			"prev_points_",
			"pcl::PointCloud<pcl::PointXYZI>",
			"unprojectPoint",
			"angleFromCol",
			"intensity",
			"_depth_image",
			"ProjectionParams",
			"checkCloudAndStorage",
			"inCloud",
			"ConstPtr",
			"normalize",
			"MatFromDepthPng",
			"rowFromAngle",
			"findClosest",
			"PointCloud2",
			"PointMatrix",
			"PointColumn",
			"Type",
			"Angles",
			"fillCosSin",
			"Angles",
			"YAML::Emitter",
			"EMIT",
			"Angles",
			"operator<<",
			"_v_span_params",
			"make_unique",
			"ProjectionParams"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"cloud_to_image",
			"pcl",
			"/c2i_",
			"cloud2image",
			"CloudToImage",
			"Angle",
			"SensorParams",
			"Angle",
			"SensorParams"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 12,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "launch/cloud2image.launch",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1788,
						"regions":
						{
						},
						"selection":
						[
							[
								1044,
								1044
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/angles.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8891,
						"regions":
						{
						},
						"selection":
						[
							[
								517,
								517
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 576.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/qt/widgets/opengl_folder_player.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11102,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/qt/utils/utils.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2454,
						"regions":
						{
						},
						"selection":
						[
							[
								333,
								333
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/home/alexandr/catkin-ws-depth_clustering/src/depth_clustering/src/utils/velodyne_utils.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3740,
						"regions":
						{
						},
						"selection":
						[
							[
								889,
								889
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3605,
						"regions":
						{
						},
						"selection":
						[
							[
								2535,
								2535
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2715.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "include/cloud2image/cloud_to_image.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1750,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "include/cloud_projection/angles.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8891,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/cloud_projection/cloud_projection.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17835,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/cloud_projection/projection_params.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4139,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/cloud_projection/sensor_params.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11060,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/cloud2image/cloud_to_image.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9779,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "src/cloud2image/cloud_to_image_node.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 236,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "include/cloud_projection/cloud_projection.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6631,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "include/cloud_projection/pcl_point_types.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1485,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "include/cloud_projection/projection_params.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3634,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "include/cloud_projection/sensor_params.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8452,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/home/alexandr/autoware-dev/autoware-feature-road-surface-extraction/ros/src/computing/perception/semantics/packages/lidar_road_surface/nodes/ground_mapper/mapping.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 93182,
						"regions":
						{
						},
						"selection":
						[
							[
								11319,
								11319
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 11549.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "/home/alexandr/autoware-dev/autoware-feature-road-surface-extraction/ros/src/computing/perception/semantics/packages/lidar_road_surface/nodes/ground_mapper/mapping.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11525,
						"regions":
						{
						},
						"selection":
						[
							[
								6958,
								6958
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5614.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 49.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 136.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 244.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
