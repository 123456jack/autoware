<launch>
  <arg name="camera_id" default="/camera0"/>
  <arg name="camera_info_src" default="/camera_info"/>
  <arg name="use_path_info" default="false"/> <!-- USE VectorMap Server to publish only TrafficSignals on current lane-->
  <!-- using path_info will use vector_map_server to determine which lane we are in, this service is very slow and block the feat_proj.
  we go around the problem by providing a list of signal lights that are on our waypoints.
  Note: This is a semi-hack that will only work for our demo. If we record different waypoints on different lanes,
  we need to regenerate filtered signal data filteredsignaldata.csv -->
  <arg name="use_filtered_signal_map" default="false"/>
  <arg name="filtered_signal_map_name" default="$(find demo_scripts)/config/filteredsignaldata.csv"/>
  <!--
  filteredsignaldata.csv is created manually. This file has the information of signals which are on the lane of our waypoints.
  These required signal information can be derived from vector_map_server -->

  <node pkg="road_wizard" type="feat_proj" name="feature_projection" output="screen">
    <param name="camera_info_topic" type="str" value="$(arg camera_id)$(arg camera_info_src)"/>
    <param name="use_path_info" type="bool" value="$(arg use_path_info)"/>
    <param name="use_filtered_signal_map" type="bool" value="$(arg use_filtered_signal_map)"/>
    <param name="filtered_signal_map" type="str" value="$(arg filtered_signal_map_name)"/>
  </node>
</launch>
